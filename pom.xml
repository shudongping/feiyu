<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.feiyu</groupId>
    <artifactId>feiyu</artifactId>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>feiyu-eureka</module>
        <module>feiyu-config</module>
        <module>feiyu-common</module>
        <module>feiyu-gateway</module>
        <module>feiyu-upms</module>
        <module>feiyu-auth</module>
    </modules>
    <name>${project.artifactId}</name>
    <packaging>pom</packaging>

    <properties>
        <spring-cloud.version>Finchley.SR2</spring-cloud.version>
        <spring-boot.version>2.0.7.RELEASE</spring-boot.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <spring-boot-admin.version>2.0.4</spring-boot-admin.version>
        <java.version>1.8</java.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <swagger.version>2.7.0</swagger.version>
        <security.oauth.version>2.3.3.RELEASE</security.oauth.version>
        <hutool.version>4.3.2</hutool.version>
        <fastjson.version>1.2.40</fastjson.version>
        <guava.version>23.0</guava.version>
        <druid.version>1.0.18</druid.version>
        <commons-lang3.version>3.4</commons-lang3.version>
        <mybatis-plus.version>3.0.6</mybatis-plus.version>
        <docker.repostory>registry.cn-qingdao.aliyuncs.com</docker.repostory>
        <docker.registry.name>test_cloud</docker.registry.name>
    </properties>

    <dependencies>
        <!--eureka 客户端-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        <!--配置文件处理器-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <!--监控-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!--监控客户端-->
        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-starter-client</artifactId>
            <version>${spring-boot-admin.version}</version>
        </dependency>
        <!--断路器依赖-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
        </dependency>
        <!--Lombok-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>

        <!--测试依赖-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <finalName>${project.name}</finalName>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <pluginManagement>

            <plugins>

                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <configuration>
                        <finalName>${project.build.finalName}</finalName>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>0.4.13</version>
                    <!--docker镜像相关的配置信息-->
                    <configuration>
                        <!--镜像名，这里用工程名-->
                        <imageName>
                            ${docker.repostory}/${docker.registry.name}/${project.artifactId}:${project.version}
                        </imageName>
                        <dockerHost>http://192.168.1.241:2375</dockerHost>
                        <imageTags>
                            <imageTag>${project.version}</imageTag>
                        </imageTags>
                        <dockerDirectory>${project.basedir}</dockerDirectory>

                        <resources>
                            <resource>
                                <targetPath>/</targetPath>
                                <directory>${project.build.directory}</directory>
                                <include>${project.build.finalName}.jar</include>
                            </resource>
                        </resources>
                        <serverId>docker-aliyun</serverId>
                        <registryUrl>${docker.repostory}</registryUrl>
                        <!--<pushImage>true</pushImage>-->
                    </configuration>
                </plugin>

            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <target>${maven.compiler.target}</target>
                    <source>${maven.compiler.source}</source>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
        </plugins>


    </build>


</project>